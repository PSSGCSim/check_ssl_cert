on:
  push:
    branches:
      - $default-branch
      - development
      - master
  # Run tests for any PRs
  pull_request:

jobs:
  build_job:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        distro:
          - 'debian:10'
          - 'ubuntu:20.10'
          - 'alpine:3.13'
          - 'centos:8'
          - 'clearlinux:latest'
          - 'fedora:33'
        include:
          - distro: 'alpine:3.13'
            pre: 'apk add -U nmap shellcheck'
          - distro: 'centos:8'
            rmjsonc: 'dnf install -y nmap shellcheck'
          - distro: 'debian:10'
            pre: 'apt-get update && apt-get -y install nmap shellcheck'
          - distro: 'ubuntu:20.10'
            pre: 'apt-get update && apt-get -y install nmap shellcheck'
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
      - name: Install netdata and run the updater on ${{ matrix.distro }}
        env:
          PRE: ${{ matrix.pre }}
        run: |
          echo $PRE > ./prep-cmd.sh
          #docker build . -f .github/dockerfiles/Dockerfile.build_test -t test --build-arg BASE=${{ matrix.distro }}
          docker run --network host -w /check_ssl_cert -v ${PWD}:/check_ssl_cert ${{ matrix.distro }} \
              /bin/sh -c 'sh ./prep-cmd.sh \
              && curl -L https://cpanmin.us | sudo perl - --sudo App::cpanminus \
              && sudo cpanm Date::Parse \
              && make test \
              && if command -v shellcheck > /dev/null 2>&1  ; then ./shell-ci-build.sh ; fi \
              && if command -v shellcheck > /dev/null 2>&1  ; then shellcheck ./check_ssl_cert test/unit_tests.sh ; fi'
